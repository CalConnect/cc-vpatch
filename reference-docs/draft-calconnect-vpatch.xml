<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="std" docName="draft-daboo-icalendar-vpatch" updates="5545, 6321">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private=""?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="daboo-icalendar-vpatch">The iCalendar VPATCH Component</title>

<author initials="C." surname="Daboo" fullname="Cyrus Daboo">
<organization>Apple Inc.</organization>
<address>
<postal>
<street>1 Infinite Loop</street>
<city>Cupertino</city>
<code>95014</code>
<country>USA</country>
<region>CA</region>
</postal>
<phone></phone>
<email>cyrus@daboo.name</email>
<uri>https://www.apple.com</uri>
</address>
</author>
<author initials="K." surname="Murchison" fullname="Kenneth Murchison">
<organization>Carnegie Mellon University</organization>
<address>
<postal>
<street>5000 Forbes Avenue</street>
<city>Pittsburgh</city>
<code>15213</code>
<country>USA</country>
<region>PA</region>
</postal>
<phone></phone>
<email>murch@andrew.cmu.edu</email>
<uri>https://www.cmu.edu</uri>
</address>
</author>
<date year="2016" month="October" day="28"/>

<area>Internet</area>
<workgroup>Network Working Group</workgroup>


<abstract>
<t>This document defines a new iCalendar <xref target="RFC5545"/> component that
allows small &quot;patches&quot; to be applied to large iCalendar data objects,
to allow for efficient data updates.  It also describes how this new
component can be used with the CalDAV calendar data access protocol
<xref target="RFC4791"/>.
</t>
</abstract>


<note title="Open Issues">
<t>
<list style="symbols">
<t>Do we need/want to handle individual values in multi-valued
properties/parameters?</t>
<t>What media type do we advertise in <spanx style="verb">Accept-Patch</spanx> header?  Just
<spanx style="verb">text/calendar</spanx>?  Currently using <spanx style="verb">text/calendar;
component=VPATCH; optinfo=PATCH-VERSION:1</spanx></t>
</list>
</t>
</note>


</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>The iCalendar <xref target="RFC5545"/> data format is in widespread use to represent
calendar data. iCalendar data can grow large (e.g., a family calendar
containing events over a period of several years).  Updating large
resources over the network currently requires the entire data to be
sent - even if the change itself is minor.
</t>
<t>This specification defines a new iCalendar component that can be used
to &quot;patch&quot; (incrementally update) iCalendar data in an efficient
manner.  When combined with the HTTP PATCH method <xref target="RFC5789"/>, it can
be used to update calendar object resources on a CalDAV <xref target="RFC4791"/>
server, or any resource on an HTTP server that contains iCalendar
data.
</t>
</section>

<section anchor="conventions-used-in-this-document" title="Conventions Used in This Document">
<t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;,
&quot;SHALL NOT&quot;, &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,
&quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be interpreted as
described in <xref target="RFC2119"/>.
</t>
<t>The notation used in this memo is the ABNF notation of <xref target="RFC5234"/> as
used by iCalendar <xref target="RFC5545"/>.  Any syntax elements shown below that
are not explicitly defined in this specification come from iCalendar
<xref target="RFC5545"/> and Calendar Availability <xref target="RFC7953"/>.
</t>
</section>

<section anchor="overview" title="Overview">
<t>The basic design of the patch format is a &quot;VPATCH&quot; component (defined
in Section 10.1) containing one or more &quot;PATCH&quot; components (defined
in Section 10.1.1), each specifying a path (which identifies one or
more components in the iCalendar object being patched), and other
components and properties that define the set of changes to be made.
</t>
<t>When multiple &quot;VPATCH&quot; components are present in an iCalendar object,
the order in which they are applied is defined by the value of any
&quot;PATCH-ORDER&quot; properties in the &quot;VPATCH&quot; components.  The &quot;VPATCH&quot;
components are sorted in order from lowest &quot;PATCH-ORDER&quot; integer
value to highest, with any components not containing a &quot;PATCH-ORDER&quot;
property placed last.  The patch process is then applied in sorted
order (any components with the same &quot;PATCH-ORDER&quot; value can be
applied in any order).
</t>
<t>No specific processing order is defined for multiple &quot;PATCH&quot;
components in a &quot;VPATCH&quot; component.
</t>
<t>The &quot;VPATCH&quot; component also contains an optional &quot;PATCH-VERSION&quot;
property to allow future extensions to the format to be recognized.
This document only defines version number &quot;1&quot;.  The &quot;PATCH-VERSION&quot;
property only needs to be present if the version number is greater
than &quot;1&quot;.  If a patch processing engine is unable to handle the
indicated version it MUST reject the entire patch operation defined
by the enclosing iCalendar object, even if other &quot;VPATCH&quot; components
have a &quot;PATCH-VERSION&quot; number that is supported.
</t>
<t>After applying a patch to an iCalendar object, the basic validity of
the resulting iCalendar object SHOULD be checked by the processing
engine (e.g., if the patch added an extra &quot;DTSTART&quot; property to a
&quot;VEVENT&quot; component that would be considered a violation of
<xref target="RFC5545"/>'s cardinality rules for the &quot;DTSTART&quot; property in a
&quot;VEVENT&quot;).  If this occurs, the patch operation MUST fail.
</t>
<t>Other validity constraints can be applied if needed.  For example,
CalDAV <xref target="RFC4791"/> requires that the &quot;UID&quot; property be the same in all
components in a calendar object resource stored on the server.  If a
patch operation adds a component to an iCalendar object with a
different &quot;UID&quot; value than the existing components, that result would
be an invalid CalDAV calendar object resource.  If other validity
constraints are violated, the patch operation MUST fail.
</t>
<t>Any failure to process a &quot;VPATCH&quot; component, for whatever reason,
MUST result in the entire patch operation being cancelled, with the
iCalendar object being patched left in its original state.
</t>
</section>

<section anchor="patch-component" title="PATCH Component">
<t>A &quot;PATCH&quot; component (defined in Section 10.1.1) MUST contain one
&quot;PATCH-TARGET&quot; property whose value is an iCalendar path (see
Section 5) that identifies components within the iCalendar object
being patched (see Section 11.2 for special handling of components
representing recurring items).  The set of components thus identified
are the &quot;target components&quot; for the patch operations.  The set of
patch operations defined by the other components and properties
present in the &quot;PATCH&quot; component are then applied to each target
component (in the order specified below).  If a &quot;PATCH-TARGET&quot;
property does not match any components in the iCalendar object being
patched, then the patch operation MUST succeed without any changes
being applied to the iCalendar object being patched.
</t>
<t>Four patch operations are supported:
</t>
<t>
<list style="symbols">
<t>Component additions or updates: any components within the &quot;PATCH&quot;
component are considered to be additions or updates (see
Section 6).</t>
<t>Property additions or updates: any properties (other than those
whose name starts with the &quot;PATCH-&quot; prefix) are considered to be
additions or updates (see Section 7).</t>
<t>Component, property, property parameter, property value, or
property parameter value deletion: indicated by the present of
one or more &quot;PATCH-DELETE&quot; properties (see Section 8).</t>
<t>Property parameter additions or updates: indicated by the
presence of one or more &quot;PATCH-PARAMETER&quot; properties (see
Section 9).</t>
</list>
</t>
<t>When processing a &quot;PATCH&quot; component, the processing engine MUST
follow this order:
</t>
<t>
<list style="symbols">
<t>Process all &quot;PATCH-DELETE&quot; properties first.</t>
<t>Process all &quot;PATCH-PARAMETER&quot; properties second.</t>
<t>Process all other components third.</t>
<t>Process all non &quot;PATCH-&quot; prefixed properties fourth.</t>
</list>
</t>
</section>

<section anchor="icalendar-path" title="iCalendar Path">
<t>The &quot;PATCH-TARGET&quot;, &quot;PATCH-DELETE&quot;, and &quot;PATCH-PARAMETER&quot; property
values are all iCalendar &quot;paths&quot;.  The path is used to match
iCalendar elements that the patch operation will be applied to.  The
path is a list of &quot;segments&quot; (separated by the &quot;/&quot;, &quot;#&quot;, &quot;;&quot; or &quot;=&quot;
characters) that matches an iCalendar element in the iCalendar object
model hierarchy (a component, a property, a property parameter, a
property value, or a property parameter value).  A path can either be
&quot;absolute&quot; (referring to items within the top-level iCalendar object
being patched) or &quot;relative&quot; (referring to items within some other
component as determined by the scope of the operation).
</t>
<t>A path can start with a series of component segments (which always
have a &quot;/&quot; prefix).  Those can be followed by a property segment
(which always has a &quot;#&quot; prefix&quot;).  A property segment can be followed
by either a parameter segment (which always has a &quot;;&quot; prefix), or a
value segment (which always has a &quot;=&quot; prefix).  A parameter segment
can be followed by a value segment (which always has a &quot;=&quot; prefix).
</t>
<t>An absolute path always starts with a &quot;/VCALENDAR&quot; component segment
since an iCalendar object is always a single &quot;VCALENDAR&quot; component.
</t>
<t>A relative path can start with a component segment or a property
segment, with the path assumed to be relative to an enclosing
component defined by the context.
</t>
<t>To target a component inside of another component, a component
segment is appended to the path.  Component segments can include an
optional match item.  When present, this allows targeting of
components that match a specific &quot;UID&quot; property value, and/or a
&quot;RECURRENCE-ID&quot; value (or lack of &quot;RECURRENCE-ID&quot; property to target
a &quot;master&quot; recurrence component).  See Section 11.2 for special
handling of components representing recurring items.
</t>
<t>To target a property inside of a component, a property segment is
added to the path.  A property segment can include an optional match
item.  When present, this allows targeting of properties by value
(matching or not matching a specific value), or which have a named
property parameter present, or by property parameter value (matching
or not matching a specific value).
</t>
<t>To target a property parameter, a parameter segment is added to the
property segment at the end of the path.
</t>
<t>To target a single value in a multi-valued property, a value segment
is added to the property segment at the end of the path.
</t>
<t>To target a single value in a multi-valued property parameter, a
value segment is added to the parameter segment at the end of the
path.
</t>
<t>Values in match items MUST use URL-style percent (%) encoding of the
characters &quot;/&quot;, &quot;#&quot;, &quot;;&quot;, &quot;=&quot;, and &quot;]&quot;.  This allows a path to be
quickly split into segments by breaking apart the text on the
relevant delimiter characters.
</t>
<t>The syntax for a path is defined by the following notation (note that
some of the syntax elements defined here are not used by this
specification, however, it is anticipated that this general path
syntax will be useful for other specifications):
</t>

<figure align="left"><artwork align="left" type="abnf">
abs-path         = abs-comp-path [prop-all-path]
       ; Absolute path for any iCalendar element

rel-full-path    = (comp-path [prop-all-path]) / prop-all-path
       ; Relative path for any iCalendar element at any depth
       ; within the enclosing component

rel-one-path     = comp-path / prop-all-path
       ; Relative path for any iCalendar element immediately
       ; within the enclosing component

abs-comp-path    = "/VCALENDAR" *comp-segment
       ; Absolute path for components only

comp-path        = 1*comp-segment
       ; Path for components only

prop-path        = prop-segment
       ; Relative path for properties only

prop-param-path  = prop-segment [param-segment]
       ; Relative path for property and parameter only

prop-all-path    = prop-segment [param-segment] [value-segment]
       ; Relative path for any element of a property

comp-segment     = "/" name comp-match
comp-match       = [uid-match] [rid-match]
uid-match        = "[UID=" value-escaped "]"
rid-match        = "[RID=" ("M" / ridval) "]"
       ; "M" matches "master" component

prop-segment     = prop-prefix [prop-match]
prop-prefix      = "#" name
prop-match       = "[" ( prop-equal / prop-not-equal /
                        param-match ) "]"

prop-equal       = "=" value-escaped
prop-not-equal   = "!" value-escaped

param-match      = "@" param-name [ ( param-equal /
                                     param-not-equal ) ]
param-equal      = "=" param-value-escaped
param-not-equal  = "!" param-value-escaped

param-segment    = ";" param-name

value-segment    = "=" (value / param-value)

value-escaped       = value
                   ; % encoding for "/", "#", ";", and "]"

param-value-escaped = param-value
                   ; % encoding for "/", "#", ";", and "]"
</artwork></figure>
<t>Some examples of &quot;path&quot; items follow.
</t>
<t>Targeting components (path contains exactly one or more component
segments):
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR</spanx></t>
</list>
</t>
<t>Targets the &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT</spanx></t>
</list>
</t>
<t>Targets all &quot;VEVENT&quot; components in the &quot;VCALENDAR&quot; component in
  the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT[UID=1234]</spanx></t>
</list>
</t>
<t>Targets any &quot;VEVENT&quot; components that have a &quot;UID&quot; property value
  exactly equal to &quot;1234&quot;, in the &quot;VCALENDAR&quot; component in the
  iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT[UID=1234%2F4567][RID=M]</spanx></t>
</list>
</t>
<t>Targets any &quot;VEVENT&quot; components that have a &quot;UID&quot; property value
  exactly equal to &quot;1234/4567&quot; and do not have a &quot;RECURRENCE-ID&quot;
  property, in the &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t>`/VCALENDAR/VEVENT[UID=1234][RID=20160902T223000Z]
Targets any &quot;VEVENT&quot; components that have a &quot;UID&quot; property value
exactly equal to &quot;1234&quot; and have a &quot;RECURRENCE-ID&quot; property whose
UTC value is &quot;20160902T223000Z&quot;, in the &quot;VCALENDAR&quot; component in
the iCalendar object.</t>
</list>
</t>
<t>Targeting properties (path contains exactly zero or more component
segments, and one property segment):
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#STATUS</spanx></t>
</list>
</t>
<t>Targets all &quot;STATUS&quot; properties in all &quot;VEVENT&quot; components in the
  &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT[UID=1234]#STATUS</spanx></t>
</list>
</t>
<t>Targets all &quot;STATUS&quot; properties in any &quot;VEVENT&quot; components that
  have a &quot;UID&quot; property value exactly equal to &quot;1234&quot;, in the
  &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com]</spanx></t>
</list>
</t>
<t>Targets any &quot;ATTENDEE&quot; properties that have the value
  &quot;mailto:cyrus@example.com&quot; in all &quot;VEVENT&quot; components, in the
  &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[!mailto:cyrus@example.com]</spanx></t>
</list>
</t>
<t>Targets any &quot;ATTENDEE&quot; properties that do not have the value
  &quot;mailto:cyrus@example.com&quot; in all &quot;VEVENT&quot; components, in the
  &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[@MEMBER]</spanx></t>
</list>
</t>
<t>Targets any &quot;ATTENDEE&quot; properties that have a &quot;MEMBER&quot; property
  parameter present in all &quot;VEVENT&quot; components, in the &quot;VCALENDAR&quot;
  component in the iCalendar object
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[@CN=Cyrus Daboo]</spanx></t>
</list>
</t>
<t>Targets any &quot;ATTENDEE&quot; properties that have a &quot;CN&quot; property
  parameter with the value &quot;Cyrus Daboo&quot; present in all &quot;VEVENT&quot;
  components, in the &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[@CN!Cyrus Daboo]</spanx></t>
</list>
</t>
<t>Targets any &quot;ATTENDEE&quot; properties that have a &quot;CN&quot; property
  parameter not equal to the value &quot;Cyrus Daboo&quot;, or do not have a
  &quot;CN&quot; property parameter present in all &quot;VEVENT&quot; components, in the
  &quot;VCALENDAR&quot; component in the iCalendar object.
</t>
<t>
<list style="symbols">
<t><spanx style="verb">#ATTENDEE[=mailto:cyrus@example.com]</spanx>
A relative path that targets any &quot;ATTENDEE&quot; properties that have
the value &quot;mailto:cyrus@example.com&quot; in all components the path is
relative to.</t>
</list>
</t>
<t>Targeting property parameters (path contains exactly zero or more
component segments, one property segment, and one parameter segment):
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE;PARTSTAT</spanx>
Targets the &quot;PARTSTAT&quot; parameter on all &quot;ATTENDEE&quot; properties in
all &quot;VEVENT&quot; components in the &quot;VCALENDAR&quot; component in the
iCalendar object.</t>
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT</spanx>
Targets the &quot;PARTSTAT&quot; parameter on any &quot;ATTENDEE&quot; properties that
have the value &quot;mailto:cyrus@example.com&quot; in all &quot;VEVENT&quot;
components, in the &quot;VCALENDAR&quot; component in the iCalendar object.</t>
</list>
</t>
<t>Targeting property values (path contains exactly zero or more
component segments, one property segment, and one value segment):
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#EXDATE=20160905</spanx>
Targets all &quot;EXDATE&quot; property values with the value &quot;20160905&quot; in
all &quot;VEVENT&quot; components in the &quot;VCALENDAR&quot; component in the
iCalendar object.</t>
</list>
</t>
<t>Targeting property parameter values (path contains exactly zero or
more component segments, one property segment, one parameter segment,
and one value segment):
</t>
<t>
<list style="symbols">
<t><spanx style="verb">/VCALENDAR/VEVENT#ATTENDEE;MEMBER=mailto:group@example.com</spanx>
Targets all &quot;MEMBER&quot; property parameter values with the value
&quot;mailto:group@example.com&quot; in all &quot;ATTENDEE&quot; properties in all
&quot;VEVENT&quot; components in the &quot;VCALENDAR&quot; component in the iCalendar
object.</t>
</list>
</t>
</section>

<section anchor="adding-or-updating-components" title="Adding or Updating Components">
<t>Any iCalendar component defined in the &quot;PATCH&quot; component (referred to
below as the &quot;action component&quot;) is treated as either an addition to
the target component, or as an update of an existing component in the
target component.  The following rules are used to process such
components:
</t>
<t>
<list style="symbols">
<t>If the action component contains a &quot;UID&quot; property and a
&quot;RECURRENCE-ID&quot; property, then any components with the same
values for both their &quot;UID&quot; and &quot;RECURRENCE-ID&quot; properties, that
are immediate sub-components of the target component, are removed
from the target component, and the action component is added to
the target component.</t>
<t>If the action component contains a &quot;UID&quot; property and does not
contain a &quot;RECURRENCE-ID&quot; property, then any components with the
same value for their &quot;UID&quot; property, and containing no
&quot;RECURRENCE-ID&quot; property, that are immediate sub-components of
the target component, are removed from the target component, and
the action component is added to the target component.</t>
<t>If the action component does not contain a &quot;UID&quot; property, then
all components with the same name that do not contain a &quot;UID&quot;
property, that are immediate sub-components of the target
component, are removed from the target component, and the action
component is added to the target component.</t>
</list>
</t>
</section>

<section anchor="adding-or-updating-properties" title="Adding or Updating Properties">
<t>Any iCalendar property defined in the &quot;PATCH&quot; component (referred to
below as the &quot;action property&quot;) is treated as either an addition to
the target component, or as an update of an existing property in the
target component.  A &quot;PATCH-ACTION&quot; (Section 10.4) property parameter
can be defined on action properties and is used to control how the
action is processed.  Any &quot;PATCH-ACTION&quot; property parameter MUST be
removed from the action property when it is added to the target
component.  The following rules are used to process such properties:
</t>
<t>
<list style="symbols">
<t>If the action property does not contain a &quot;PATCH-ACTION&quot; property
parameter, or contains a &quot;PATCH-ACTION&quot; property parameter with
the default value &quot;BYNAME&quot;, then all properties with the same
name in the target component are removed, and the action property
is added to the target component.</t>
<t>If the action property contains a &quot;PATCH-ACTION&quot; property
parameter with the value &quot;CREATE&quot;, then the action property is
added to the target component.</t>
<t>If the action property contains a &quot;PATCH-ACTION&quot; property
parameter with the value &quot;BYVALUE&quot;, then all properties with the
same name and same value in the target component are removed, and
the action property is added to the target component.</t>
<t>If the action property contains a &quot;PATCH-ACTION&quot; property
parameter with the value starting with &quot;BYPARAM&quot;, then all
properties with the same name and a property parameter that
matches the one that is part of the &quot;PATCH-ACTION&quot; property
value, in the target component are removed, and the action
property is added to the target component.</t>
</list>
</t>
<t>The &quot;PATCH-ACTION=BYNAME&quot; operation is used for adding or updating
&quot;singleton&quot; properties - properties that only appear once in a given
iCalendar component (e.g., &quot;DTSTART&quot;, &quot;DTEND&quot;, &quot;LOCATION&quot;, etc).
</t>
<t>The &quot;PATCH-ACTION=CREATE&quot; operation is used for adding &quot;multi-
occurring&quot; properties - properties that can appear more than once in
a given iCalendar component (e.g., &quot;ATTENDEE&quot;, &quot;ATTACH&quot;, &quot;EXDATE&quot;,
etc).
</t>
<t>The &quot;PATCH-ACTION=BYVALUE&quot; operation is used for updating a specific
&quot;multi-occurring&quot; property that can be uniquely identified by its
value (e.g., the &quot;ATTENDEE&quot; property can appear multiple times in a
&quot;VEVENT&quot; component, but each property will have a unique value in
that component).  This operation cannot be used when the value of the
property is being changed.  Instead, the &quot;PATCH-ACTION=BYPARAM&quot;
operation can be used to identify the target property.
</t>
<t>The &quot;PATCH-ACTION=BYPARAM&quot; operation is used for updating a specific
&quot;multi-occurring&quot; property that can be uniquely identified by a
parameter value that is the same in the action and target properties.
</t>
<t>There may be some situations where a multi-occurring property cannot
be uniquely identified.  In such cases, the solution to updating one
or more of them is to use a &quot;PATCH-ACTION=BYNAME&quot; to replace all the
existing properties with one new one, then use &quot;PATCH-ACTION=CREATE&quot;
to add back others that are unchanged or also being updated.  Whilst
this is not ideal, it is anticipated that these situations can be
avoided by adding appropriate property parameters with unique values
to help disambiguate the multi-occurring properties.
</t>
</section>

<section anchor="deleting-components-properties-or-property-parameters" title="Deleting Components, Properties, or Property Parameters">
<t>The &quot;PATCH-DELETE&quot; property (defined in Section 10.3.2) is used to
indicate deletion of iCalendar elements from the component identified by
the &quot;PATCH-TARGET&quot; property in the same &quot;PATCH&quot; component as the
&quot;PATCH-DELETE&quot; property.  As such, the value of the &quot;PATCH-DELETE&quot;
property is always a relative path (see Section 5) that refers to an
element that is an immediate &quot;child&quot; of the target component.
</t>
<t>The following operations are supported:
</t>
<t>Delete components
:
  The &quot;PATCH-DELETE&quot; path value targets components only.  The matching
  components are removed from the &quot;parent&quot; target component.
</t>
<t>Properties
:
  The &quot;PATCH-DELETE&quot; path value targets properties only.  The matching
  properties are removed from the &quot;parent&quot; target component.
</t>
<t>Property parameters
:
  The &quot;PATCH-DELETE&quot; path value targets property parameters on specific
  properties only.  The matching property parameters are removed from
  the corresponding property.
</t>
<t>Property values
:
  The &quot;PATCH-DELETE&quot; path value targets a property value on specific
  multi-valued properties only.  The matching property value is removed
  from the the corresponding property.  If that results in a property
  with no value, that property is also removed from its &quot;parent&quot; target
  component.
</t>
<t>Property parameter values
:
  The &quot;PATCH-DELETE&quot; path value targets a property parameter value on a
  specific multi-valued property parameter on specific properties only.
  The matching property parameter value is removed from the
  corresponding property parameter.  If that results in a property
  parameter with no value, that property parameter is also removed from
  from the corresponding property.
</t>
</section>

<section anchor="adding-or-updating-property-parameters" title="Adding or Updating Property Parameters">
<t>The &quot;PATCH-PARAMETER&quot; property (defined in Section 10.3.3) is used to
indicate addition or update of property parameters and property
parameter values to properties contained in the components identified by
the &quot;PATCH-TARGET&quot; property in the same &quot;PATCH&quot; component as the
&quot;PATCH-PARAMETER&quot; property.  As such, the value of the &quot;PATCH-
PARAMETER&quot; property is always a relative path (see Section 5) that
refers to a property that is an immediate &quot;child&quot; of the target
component.
</t>
<t>The following operations are supported:
</t>
<t>Add or update property parameters
:
  The &quot;PATCH-PARAMETER&quot; path value targets a property only.  Any
  property parameters defined on the &quot;PATCH-PARAMETER&quot; replace the
  matching parameters on the target property, or are added to the target
  property if no matching parameters exist.
</t>
<t>Add a property parameter value
:
  The &quot;PATCH-PARAMETER&quot; path value targets a multi-valued parameter
  only.  The values in any property parameters defined on the
  &quot;PATCH-PARAMETER&quot; property are added to the corresponding property
  parameters of the target properties.  If no corresponding property
  parameter is defined on the target properties, then property
  parameters are created with the corresponding values.
</t>
</section>

<section anchor="icalendar-extensions" title="iCalendar Extensions">
<t>This specification adds a new &quot;VPATCH&quot; calendar component to
iCalendar.  The &quot;VPATCH&quot; component is itself a container for a new
&quot;PATCH&quot; sub-component.
</t>

<section anchor="vpatch-component" title="VPATCH Component">
<t>Component Name:  VPATCH
</t>
<t>
<list style="hanging">
<t hangText="Purpose:">
<vspace />
Provide a grouping of &quot;PATCH&quot; sub-components that describe
the patch actions to be performed.</t>
<t hangText="Description:">
<vspace />
This component serves as a container for a series of
&quot;PATCH&quot; sub-components, each specifying patch actions to be
performed on a certain target element in an iCalendar object.</t>
<t hangText="Format Definition:
:
A &quot;VPATCH&quot; calendar component is defined by the following notation:">
<vspace />
</t>
</list>
</t>

<figure align="left"><artwork align="left" type="abnf">
vpatchc     = "BEGIN" ":" "VPATCH" CRLF
               vpatchprop action
             "END" ":" "VPATCH" CRLF

vpatchprop  = *(
                ;
                ; The following are REQUIRED,
                ; but MUST NOT occur more than once.
                ;
                dtstamp / uid /
                ;
                ;
                ; The following are OPTIONAL,
                ; but MUST NOT occur more than once.
                ;
                patch-version / patch-order /
                ;
                ; The following are OPTIONAL,
                ; and MAY occur more than once.
                ;
                other-prop
                ;
              )

other-prop  = ( iana-prop / x-prop )

action      = *( patchc / iana-comp / x-comp )
</artwork></figure>

<section anchor="patch-component-1" title="PATCH Component">
<t>
<list style="hanging">
<t hangText="Component Name:">
<vspace />
PATCH</t>
<t hangText="Purpose
:
Provide a set of components, properties, and property parameters to be
added to, deleted from, or updated in the iCalendar object.">
<vspace />
</t>
<t hangText="Description:
:
This component provides a grouping of patch actions to be performed
within the scope of a set of components.  If the &quot;PATCH-TARGET&quot;
property matches one or more iCalendar components, then the target
components are patched using the remaining properties and components.
If there is no iCalendar component that matches the &quot;PATCH-TARGET&quot;
property in the iCalendar object, the &quot;PATCH&quot; action MUST succeed
without any changes being applied to the iCalendar object being
patched.">
<vspace />
</t>
<t hangText="Format Definition:
:
A &quot;PATCH&quot; calendar component is defined by the following notation:">
<vspace />
</t>
</list>
</t>

<figure align="left"><artwork align="left" type="abnf">
patchc     = "BEGIN" ":" "PATCH" CRLF
                  patchprop subcomp
                "END" ":" "PATCH" CRLF

 patchprop  = *(
                  ;
                  ; The following is REQUIRED,
                  ; but MUST NOT occur more than once.
                  ;
                  patchtarget /
                  ;
                  ; The following are OPTIONAL,
                  ; and MAY occur more than once.
                  ;
                  patchdelete / patchparam / other-prop
                  ;
                )

 subcomp    = *(
                 ;
                 ; The following are OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 eventc / todoc / journalc / freebusyc /
                 timezonec / alarmc / standard / daylight /
                 availabilityc / availablec /
                 iana-comp / x-comp
                 ;
              )
</artwork></figure>
</section>
</section>

<section anchor="vpatch-properties" title="VPATCH Properties">
<t>The &quot;VPATCH&quot; properties are attributes that apply to the &quot;VPATCH&quot;
component, as a whole.  These properties do not appear within &quot;VPATCH&quot;
sub-components.  They SHOULD be specified after the &quot;BEGIN:VPATCH&quot;
delimiter string and prior to any sub-component.
</t>

<section anchor="patchversion-property" title="PATCH-VERSION Property">
<t>Property Name:  PATCH-VERSION
</t>
<t>Purpose:  This property specifies the identifier corresponding to the
  highest version number of the &quot;VPATCH&quot; specification that is
  required in order to interpret the &quot;VPATCH&quot; component.
</t>
<t>Value Type:  INTEGER
</t>
<t>Property Parameters:  IANA and nonstandard property parameters can be
  specified on this property.
</t>
<t>Conformance:  This property can be specified once in an &quot;VPATCH&quot;
  component.  The default value is &quot;1&quot;.  This property MUST be
  specified if its value is greater than &quot;1&quot;.  Otherwise, this
  property is OPTIONAL.
</t>
<t>Description:  A value of &quot;1&quot; corresponds to this memo.  See Section 3
  for a description of how this property is used.
</t>
<t>Format Definition:  This property is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
patch-version  = "PATCH-VERSION pverparam ":" pvervalue CRLF

pverparam      = *(";" other-param)

pvervalue      = "1" / pmaxver
              ; "1" signifies compliance with this memo

pmaxver        = &lt;A IANA-registered VPATCH version&gt;
              ; Maximum VPATCH version needed to process the VPATCH
              ; component.
</artwork></figure>
<t>Example:  The following is an example of this property:
</t>

<figure align="left"><artwork align="left">
PATCH-VERSION:1
</artwork></figure>
</section>

<section anchor="patchorder-property" title="PATCH-ORDER Property">
<t>Property Name:  PATCH-ORDER
</t>
<t>Purpose:  This property specifies the ordering of the associated
  &quot;VPATCH&quot; component.
</t>
<t>Value Type:  INTEGER
</t>
<t>Property Parameters:  IANA and nonstandard property parameters can be
  specified on this property.
</t>
<t>Conformance:  This property can be specified once in a &quot;VPATCH&quot;
  component.
</t>
<t>Description:  This property is OPTIONAL and is used to indicate the
  relative ordering of the associated &quot;VPATCH&quot; component amongst its
  siblings.  See Section 3 for a description of how this property is
  used.
</t>
<t>Format Definition:  This property is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
patch-order  = "PATCH-ORDER porderparam ":" integer CRLF

porderparam  = *(";" other-param)
</artwork></figure>
<t>Example:  The following is an example of this property:
</t>

<figure align="left"><artwork align="left">
PATCH-ORDER:1
</artwork></figure>
</section>
</section>

<section anchor="patch-component-properties" title="PATCH Component Properties">
<t>The following properties can appear within PATCH components.
</t>

<section anchor="patchtarget-property" title="PATCH-TARGET Property">
<t>Property Name:  PATCH-TARGET
</t>
<t>Purpose:  This property specifies a path targeting one or more
  components within an iCalendar object.
</t>
<t>Value Type:  TEXT
</t>
<t>Property Parameters:  IANA and nonstandard property parameters can be
  specified on this property.
</t>
<t>Conformance:  This property MUST be specified within any &quot;PATCH&quot; sub-
  component.
</t>
<t>Description:  This property is used to match iCalendar components
  that the patch operations will be applied to.  The path value is
  always an absolute path, and interpreted as described in
  Section 5.
</t>
<t>Format Definition:  This property is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
patchtarget   = "PATCH-TARGET ptargetparam ":" ptargetpath CRLF

ptargetparam  = *(";" other-param)

ptargetpath   = abs-comp-path / comp-path
               ; This specification only defines how abs-comp-path
               ; is used. Use of the comp-path element will be
               ; defined by other specifications wishing to make use
               ; of "relative" patches.
</artwork></figure>
<t>Example:  The following is an example of this property:
</t>

<figure align="left"><artwork align="left">
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
</artwork></figure>
</section>

<section anchor="patchdelete-property" title="PATCH-DELETE Property">
<t>Property Name:  PATCH-DELETE
</t>
<t>Purpose:  This property specifies a path (relative to &quot;PATCH-TARGET&quot;)
  targeting one or more components, properties, or parameters to be
  removed from the target components identified by &quot;PATCH-TARGET&quot;.
</t>
<t>Value Type:  TEXT
</t>
<t>Property Parameters:  IANA and nonstandard property parameters can be
  specified on this property.
</t>
<t>Conformance:  This property can be specified within a &quot;PATCH&quot; sub-
  component.
</t>
<t>Description:  This property is used to match iCalendar elements that
  will be deleted.  The path value is always a relative path for
  only immediate components and properties within the target
  component, and interpreted as described in Section 8.
</t>
<t>Format Definition:  This property is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
patchdelete   = "PATCH-DELETE pdeleteparam ":" pdeletepath CRLF

pdeleteparam  = *(";" other-param)

pdeletepath   = rel-one-path
             ; PATCH-DELETE path is relative to PATCH-TARGET path
</artwork></figure>
<t>Example:  The following are examples of this property:
</t>
<t>PATCH-DELETE:/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com]
</t>
</section>

<section anchor="patchparameter-property" title="PATCH-PARAMETER Property">
<t>Property Name:  PATCH-PARAMETER
</t>
<t>Purpose:  This property specifies a set of parameters to be set on
  the target property.
</t>
<t>Value Type:  TEXT
</t>
<t>Property Parameters:  IANA and nonstandard property parameters can be
  specified on this property.
</t>
<t>Conformance:  This property can be specified within a &quot;PATCH&quot; sub-
  component.
</t>
<t>Description:  This property specifies parameters to be set on the
  target property.  The path value is always a relative path to a
  property within the target component, and interpreted as described
  in Section 9.
</t>
<t>Format Definition:  This property is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
patchparam   = "PATCH-PARAMETER pparamparam ":" pparampath CRLF

pparamparam  = *(";" other-param)

pparampath   = prop-param-path
</artwork></figure>
<t>Example:  The following are examples of this property:
</t>

<figure align="left"><artwork align="left">
PATCH-PARAMETER;PARTSTAT=NEEDS-ACTION:
 #ATTENDEE[=mailto:cyrus@example.com]
PATCH-PARAMETER;PARTSTAT=NEEDS-ACTION:#ATTENDEE[@CN=Cyrus Daboo]
PATCH-PARAMETER;MEMBER=mailto:newgroup@example.com:#ATTENDEE;MEMBER
</artwork></figure>
</section>
</section>

<section anchor="patchaction-property-parameter" title="PATCH-ACTION Property Parameter">
<t>Parameter Name:  PATCH-ACTION
</t>
<t>Purpose:  To specify whether the property should be added or
  replaced.
</t>
<t>Format Definition:  This parameter is defined by the following
  notation:
</t>

<figure align="left"><artwork align="left" type="abnf">
pactionparam    = "PATCH-ACTION" "="
                   pactioncreate /
                   pactionbyname /
                   pactionbyvalue /
                   pactionbyparam /
                   iana-token /     ; IANA registered value
                   x-name           ; Experimental value

pactioncreate   = "CREATE"
               ; Always add property to target component.

pactionbyname   = "BYNAME"
               ; Always remove properties with the same name
               ; from the target component,
               ; then add this property to the target component.
               ; This value is the default and MAY be omitted.

pactionbyvalue  = "BYVALUE"
               ; Always remove properties with the same name
               ; and value from the target component,
               ; then add this property to the target component.

pactionbyparam  = DQUOTE "BYPARAM" param-match   DQUOTE
               ; Always remove properties with the same name
               ; and parameter name/value from the target
               ; component, then add this property to the target
               ; component.
</artwork></figure>
<t>Description:  This parameter can be specified on properties contained
  in a &quot;PATCH&quot; component and MUST NOT be specified on properties
  outside of a &quot;PATCH&quot; component.  This parameter specifies whether
  the property should be added to the target component or should
  replace existing properties in the target component.  In the
  latter case, the parameter also specifies how to match existing
  properties.  The processing of this property parameter is
  described in Section 7.
</t>
<t>Examples:  The following are examples of this property parameter:
</t>

<figure align="left"><artwork align="left">
ATTENDEE;PATCH-ACTION=BYVALUE;PARTSTAT=NEEDS-ACTION:
mailto:cyrus@example.com
DESCRIPTION;PATCH-ACTION="BYPARAM@LANGUAGE=en_GB";LANGUAGE=en_US:
Meeting to discuss VPATCH
</artwork></figure>
</section>
</section>

<section anchor="additional-considerations" title="Additional Considerations">

<section anchor="handling-default-properties-and-parameters" title="Handling Default Properties and Parameters">
<t>iCalendar properties and property parameters can have default values,
which allows those items to be omitted from the iCalendar data, but
with the default value assumed.  A patch operation might add
properties or property parameters with default values.  A patch
processing engine MAY choose to remove properties or property
parameters with default values from the patched iCalendar object.
</t>
</section>

<section anchor="handling-recurrences" title="Handling Recurrences">
<t>Recurring events (or other types of component) in iCalendar are defined
by the presence of &quot;RRULE&quot;, &quot;RDATE&quot;, and &quot;EXDATE&quot; properties in a
&quot;master&quot; iCalendar component.  Those rules produce a set of &quot;generated&quot;
instances.  In some cases specific &quot;generated&quot; instances are changed,
resulting in the presence of &quot;overridden&quot; components, which are
identified by having the same &quot;UID&quot; property value as the &quot;master&quot;
component, and a &quot;RECURRENCE-ID&quot; property whose value matches the start
time of the corresponding &quot;generated&quot; instance (which can be different
from the actual start time of the overridden instance).
</t>
<t>When a set of master and overridden recurring components exist in the
iCalendar object being patched, each can be uniquely targeted by using
the &quot;RID=&quot; match item in the component segment of the path value of a
&quot;PATCH-TARGET&quot; or &quot;PATCH-DELETE&quot; property.  To target the master
component, a &quot;RID=M&quot; match item is used.  To target an overridden
component, the &quot;RID=&quot; value is set to the value of the &quot;RECURRENCE-ID&quot;
property in the overridden component.
</t>
<t>Patch commands can also be used to implicitly create overridden
components in the iCalendar object being patched by specifying a path
with a &quot;RID=&quot; match item, using what would be the overridden component's
&quot;RECURRENCE-ID&quot; value if it existed as a separate component.  This is
useful when an overridden component needs to be added, but the changes
to it are small (e.g., an instance where only the summary of the event
is different).
</t>
<t>If the value of a &quot;RID=&quot; match item in a path does not correspond to an
existing instance (either because its value does not match a &quot;generated&quot;
instance, or its value matches an &quot;EXDATE&quot; in the &quot;master&quot;
component), then the patch operation MUST fail.
</t>
<t>For example, consider the following daily recurring event:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>The following patch command could be used to update the &quot;SUMMARY&quot;
property value of the second instance of the recurring event:
</t>

<figure align="left"><artwork align="left">
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234][RID=20160903T120000Z]
SUMMARY:Override second instance
END:PATCH
END:VPATCH
</artwork></figure>
<t>which results in the following updated iCalendar component:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID=20160903T120000Z
DTSTART:20160903T120000Z
DURATION:PT1H
SUMMARY:Override second instance
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>A similar result could have been achieved by using a path targeting the
&quot;VCALENDAR&quot; component, and the entire &quot;overridden&quot; component supplied as
the data.  However, the implicit override behaviour allows for a more
compact representation of this type of change.
</t>
<t>There is no equivalent behavior when it comes to removing &quot;overridden&quot;
components from an iCalendar object to cancel the instance.  In that
case, two &quot;PATCH&quot; components are required: one to delete the
&quot;overridden&quot; component, and one to create an &quot;EXDATE&quot; property value in
the master component to cover the cancellation.  So, continuing from the
example data immediately above, the following patch commands would
cancel the instance that was previously overridden:
</t>

<figure align="left"><artwork align="left">
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
PATCH-DELETE:/VEVENT[UID=1234][RID=20160903T120000Z]
END:PATCH
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234][RID=M]
EXDATE;PATCH-ACTION=CREATE:20160903T120000Z
END:PATCH
END:VPATCH
</artwork></figure>
<t>which results in the following updated iCalendar component:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
EXDATE:20160903T120000Z
END:VEVENT
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="folded-lines" title="Folded lines">
<t>iCalendar data can contain &quot;folded&quot; lines (as described in Section 3.1
of <xref target="RFC5545"/>).  The patch operations described in this specification
are a &quot;semantic&quot; rather than &quot;syntactic&quot; update to the data. i.e., they
apply to the underlying object model as opposed to the &quot;raw&quot; iCalendar
text data.  As such, folded lines in the iCalendar data targeted by the
patch commands are not significant.
</t>
<t>Any iCalendar data supplied as data items in a patch command MAY contain
folded lines.
</t>
</section>

<section anchor="encoding" title="Encoding">
<t>Text values in iCalendar use a backslash escape mechanism for certain
characters (as described in Section 3.3.11 <xref target="RFC5545"/>).  Patch
operations apply to the escaped form of the iCalendar data.  For
example, to delete a &quot;DESCRIPTION&quot; property that contains an encoded
line feed character:
</t>

<figure align="left"><artwork align="left">
DESCRIPTION:Line one\nLine two
</artwork></figure>
<t>the following PATCH-DELETE property would be used:
</t>

<figure align="left"><artwork align="left">
PATCH-DELETE:#DESCRIPTION[=Line one\nLine two]
</artwork></figure>
<t>Similarly, to update the &quot;DESCRIPTION&quot; property, the following patch
command could be used:
</t>

<figure align="left"><artwork align="left">
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT
DESCRIPTION:Line one\nLine two\nLine three
END:PATCH
END:VPATCH
</artwork></figure>
</section>

<section anchor="generation" title="Generation">
<t>This specification does not define how patch data is generated, as that
is likely to be highly dependent on the nature of the implementation.
However, it is recommended that patch generators use sets of commands
that keep the overall patch data as compact as possible, since one of
the goals of this specification is to reduce the size of data needed to
do updates.  One example is the choice of whether to update an entire
property, or just property parameters, when changes are made to just
property parameters.  In some cases, the data in a property parameter
can be large, so repeating that in a full property update may result in
larger data than simple using the &quot;PATCH-PARAMETER&quot; property to do an
update.  On the other hand, if lots of property parameters are being
updated or removed, it can be more efficient to update the entire
property rather than using lots of &quot;PATCH-PARAMETER&quot; and &quot;PATCH-DELETE&quot;
properties.
</t>
</section>
</section>

<section anchor="use-with-itip" title="Use with iTIP">
<t>iTIP <xref target="RFC5546"/> defines how iCalendar data can be sent between
calendar user agents to schedule calendar components between calendar
users.  This specification does not define how iCalendar patch
documents can be used with iTIP.
</t>
</section>

<section anchor="use-with-caldav-and-http" title="Use with CalDAV and HTTP">
<t>The CalDAV <xref target="RFC4791"/> calendar access protocol allows clients and
servers to exchange iCalendar data. iCalendar data is typically stored
in calendar object resources on a CalDAV server.  A CalDAV client
typically updates the calendar object resource data via an HTTP PUT
request, which requires sending the entire iCalendar object in the HTTP
request body.
</t>
<t>A server can also support the HTTP PATCH method <xref target="RFC5789"/> which allows
a patch document to be specified in the request body, and for that patch
document to be applied to the resource targeted by the HTTP request.  In
this case, the server would advertise the &quot;text/ calendar&quot; media type in
an &quot;Accept-Patch&quot; header field as described in Section 3.1 of
<xref target="RFC5789"/>.  Note that the requirements for parameters on this media
type when advertised in &quot;Accept-Patch&quot; are as follows:
</t>
<t>
<list style="symbols">
<t>MUST include a &quot;component&quot; parameter with a value of &quot;VPATCH&quot;</t>
<t>MUST include an &quot;optinfo&quot; parameter with a value of &quot;PATCH-
VERSION:&quot;, where  is the maximum patch version supported by
the server</t>
<t>MAY include a &quot;charset&quot; parameter as appropriate</t>
</list>
</t>
<t>For example:
</t>

<figure align="left"><artwork align="left">
Accept-Patch: text/calendar; component=VPATCH;
optinfo="PATCH-VERSION:1"; charset=utf-8
</artwork></figure>
<t>The PATCH-TARGET property defined by this specification does not
allow targeting the entire iCalendar object, and hence an HTTP PATCH
request cannot be used to create a new resource (a normal HTTP PUT
request is used instead).
</t>
</section>

<section anchor="security-considerations" title="Security Considerations">
<t>Patch processing engines MUST ensure that the result of applying a
patch is a valid iCalendar object in the context of the application
using the calendar data.  At the very least, the resulting iCalendar
object MUST comply with the requirements of <xref target="RFC5545"/>.
</t>
<t>Security considerations described in <xref target="RFC5545"/>, <xref target="RFC5789"/>, and
<xref target="RFC4791"/> MUST be adhered to.
</t>
</section>

<section anchor="privacy-considerations" title="Privacy considerations">
<t>Privacy considerations described in <xref target="RFC5545"/>, <xref target="RFC5789"/>, and
<xref target="RFC4791"/> MUST be adhered to.
</t>
</section>

<section anchor="iana-considerations" title="IANA Considerations">

<section anchor="component-registrations" title="Component Registrations">
<t>This document defines the following new iCalendar components to be
added to the registry defined in Section 8.3.1 of <xref target="RFC5545"/>:
</t>

<figure align="center"><artwork align="center">
+-----------+---------+-------------------------+
| Component | Status  | Reference               |
+-----------+---------+-------------------------+
| VPATCH    | Current | RFCXXXX, Section 10.1   |
| PATCH     | Current | RFCXXXX, Section 10.1.1 |
+-----------+---------+-------------------------+
</artwork></figure>
</section>

<section anchor="property-registrations" title="Property Registrations">
<t>This document defines the following new iCalendar properties to be
added to the registry defined in Section 8.3.2 of <xref target="RFC5545"/>:
</t>

<figure align="center"><artwork align="center">
+-----------------+---------+-------------------------+
| Property        | Status  | Reference               |
+-----------------+---------+-------------------------+
| PATCH-VERSION   | Current | RFCXXXX, Section 10.2.1 |
| PATCH-ORDER     | Current | RFCXXXX, Section 10.2.2 |
| PATCH-TARGET    | Current | RFCXXXX, Section 10.3.1 |
| PATCH-DELETE    | Current | RFCXXXX, Section 10.3.2 |
| PATCH-PARAMETER | Current | RFCXXXX, Section 10.3.3 |
+-----------------+---------+-------------------------+
</artwork></figure>
</section>

<section anchor="parameter-registrations" title="Parameter Registrations">
<t>This document defines the following new iCalendar parameters to be
added to the registry defined in Section 8.3.3 of <xref target="RFC5545"/>:
</t>

<figure align="center"><artwork align="center">
+--------------+---------+-----------------------+
| Property     | Status  | Reference             |
+--------------+---------+-----------------------+
| PATCH-ACTION | Current | RFCXXXX, Section 10.4 |
+--------------+---------+-----------------------+
</artwork></figure>
</section>

<section anchor="property-and-parameter-value-registries" title="Property and Parameter Value Registries">
<t>Two new IANA registrys for iCalendar elements have been added.
Additional codes MAY be used, provided the process described in
Section 8.2.1 of <xref target="RFC5545"/> is used to register them, using the
template in Section 8.2.6 of <xref target="RFC5545"/>.
</t>

<section anchor="patch-version-registry" title="Patch Version Registry">
<t>The following table has been used to initialize the Patch Version
Registry:
</t>

<figure align="center"><artwork align="center">
+---------------+---------+-----------+
| Patch Version | Status  | Reference |
+---------------+---------+-----------+
| 1             | Current | RFCXXXX   |
+---------------+---------+-----------+
</artwork></figure>
</section>

<section anchor="patch-action-registry" title="Patch Action Registry">
<t>The following table has been used to initialize the Patch Action
Registry:
</t>

<figure align="center"><artwork align="center">
+--------------+---------+-----------------------+
| Patch Action | Status  | Reference             |
+--------------+---------+-----------------------+
| CREATE       | Current | RFCXXXX, Section 10.4 |
| BYNAME       | Current | RFCXXXX, Section 10.4 |
| BYVALUE      | Current | RFCXXXX, Section 10.4 |
| BYPARAM      | Current | RFCXXXX, Section 10.4 |
+--------------+---------+-----------------------+
</artwork></figure>
</section>
</section>
</section>

<section anchor="vpatch-examples" title="VPATCH Examples">
<t>Examples of single command patch documents for common iCalendar data
operations.
</t>

<section anchor="add-a-new-component" title="Add a new component">
<t>Creates a new &quot;VEVENT&quot; component.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
BEGIN:VEVENT
UID:1234
DTSTART:20160902T103000Z
DURATION:PT1H
SUMMARY:Test event
END:VEVENT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="add-a-new-valarm-component" title="Add a new VALARM component">
<t>Creates a new &quot;VALARM&quot; component in the &quot;VEVENT&quot; component with the
&quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VALARM
UID:4567
ACTION:DISPLAY
TRIGGER:-PT30M
DESCRIPTION:Time to leave
END:VALARM
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="replace-a-component" title="Replace a component">
<t>Replace the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;
with a new component.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VEVENT
UID:1234
DTSTART:20160903T123000Z
DURATION:PT2H
SUMMARY:Changed event
END:VEVENT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-component" title="Remove a component">
<t>Remove the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
PATCH-DELETE:/VEVENT[UID=1234]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="add-properties-to-a-component" title="Add properties to a component">
<t>Add &quot;STATUS&quot; and &quot;COMPLETED&quot; properties to the &quot;VTODO&quot; component with
the &quot;UID&quot; property value &quot;4321&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VTODO[UID=4321]
STATUS;PATCH-ACTION=CREATE:COMPLETED
COMPLETED;PATCH-ACTION=CREATE:20160902T224515Z
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="update-properties-in-a-component" title="Update properties in a component">
<t>Update the &quot;SUMMARY&quot; and &quot;LOCATION&quot; properties in the &quot;VEVENT&quot;
component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
SUMMARY:Title was changed
LOCATION:New place
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="update-a-targeted-property-in-a-component" title="Update a targeted property in a component">
<t>Update the &quot;ATTENDEE&quot; property with value &quot;mailto:cyrus@example.com&quot;
in the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
ATTENDEE;PATCH-ACTION=BYVALUE;PARTSTAT=ACCEPTED:
mailto:cyrus@example.com
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-property-from-a-component" title="Remove a property from a component">
<t>Remove the &quot;URL&quot; property from the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#URL
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-property-with-a-specific-value-from-a-component" title="Remove a property with a specific value from a component">
<t>Remove the &quot;ATTENDEE&quot; property with the value
&quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="change-a-parameter-on-a-property-with-a-specific-value-from-a" title="Change a parameter on a property with a specific value from a">
<t>component
</t>
<t>Change or add the &quot;PARTSTAT&quot; parameter on the &quot;ATTENDEE&quot; property
with the value &quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component
with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-PARAMETER;PARTSTAT=ACCEPTED:
#ATTENDEE[=mailto:cyrus@example.com]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-parameter-on-a-property-with-a-specific-value-from-a-component" title="Remove a parameter on a property with a specific value from a component">
<t>Remove the &quot;PARTSTAT&quot; parameter from the &quot;ATTENDEE&quot; property with the
value &quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the
&quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>
</section>

<section anchor="remove-a-value-from-a-multivalued-parameter-on-a-property-with-a" title="Remove a value from a multi-valued parameter on a property with a">
<t>specific value from a component
</t>
<t>Remove the &quot;mailto:calext@example.com&quot; value from the &quot;MEMBER&quot;
parameter on the &quot;ATTENDEE&quot; property with the value
&quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com]
;MEMBER=mailto:calext@example.com
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>

<section anchor="remove-a-value-from-a-multivalued-property-from-a-component" title="Remove a value from a multi-valued property from a component">
<t>Remove the value &quot;20160903T120000Z&quot; from the &quot;EXDATE&quot; property in the
&quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#EXDATE=20160903T120000Z
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="attendee-updating-their-participation-status" title="Attendee updating their participation status">
<t>When an attendee updates their participation status in an event, they
will typically: update the &quot;PARTSTAT&quot; parameter on their &quot;ATTENDEE&quot;
property, remove the &quot;RSVP&quot; parameter on their &quot;ATTENDEE&quot; property,
update the &quot;TRANSP&quot; property in the &quot;VEVENT&quot; component.  This set of
changes is shown below in a single &quot;PATCH&quot; component, with the
attendee having the calendar user address &quot;mailto:cyrus@example.com&quot;.
The patch targets all &quot;VEVENT&quot; components in the iCalendar object
being changed.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com];RSVP
PATCH-PARAMETER;PARTSTAT=ACCEPTED:
#ATTENDEE[=mailto:cyrus@example.com]
TRANSP:OPAQUE
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="recurring-event-adding-one-override" title="Recurring event adding one override">
<t>A daily recurring &quot;VEVENT&quot; component with the &quot;SUMMARY&quot; property
being overridden for the second instance.
</t>
<t>iCalendar object before the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>Patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[RID=20160906]
SUMMARY:Test event - modified
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
<t>iCalendar object after the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID:20160906
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event - modified
END:VEVENT
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="removal-of-an-overridden-instance" title="Removal of an overridden instance">
<t>A daily recurring &quot;VEVENT&quot; component has one existing instance
override removed with an &quot;EXDATE&quot; added for it.
</t>
<t>iCalendar object before the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID:20160906
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event - modified
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>Patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
PATCH-DELETE:/VEVENT[RID=20160906]
END:PATCH
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[RID=M]
EXDATE;PATCH-ACTION=CREATE:20160906
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
<t>iCalendar object after the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
EXDATE:20160906
END:VEVENT
END:VCALENDAR
</artwork></figure>
</section>
</section>

<section anchor="acknowledgements" title="Acknowledgements">
<t>Thanks to the following for feedback: Michael Douglass
</t>
<t>This specification originated from work at the Calendaring and
Scheduling Consortium <xref target="CALCONNECT"/>, which has helped with the
development and testing of implementations.
</t>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7953.xml"?>
</references>
<references title="Informative References">
<reference anchor='CALCONNECT' target='http://calconnect.org/'>
  <front>
    <title>CalConnect</title>
    <author>
      <organization>The Calendaring and Scheduling Consortium</organization>
      <address>
        <postal>
         <street>4390 Chaffin Lane</street>
         <city>McKinleyville</city>
         <region>CA</region>
         <code>95519-8028</code>
         <country>United States of America</country>
        </postal>
        <email>contact@calconnect.org</email>
        <uri>https://www.calconnect.org</uri>
      </address>
    </author>
    <date month='May' year='2017'/>
  </front>
</reference>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4791.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5546.xml"?>
<?rfc include="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5789.xml"?>
</references>

<section anchor="change-history-to-be-removed-by-rfc-editor-before-publication" title="Change History (To be removed by RFC Editor before publication)">
<t>Changes in draft-daboo-icalendar-vpatch-00:
</t>
<t>
<list style="symbols">
<t>Allow PATCH-TARGET to use comp-path relative paths.</t>
<t>Fix uid-match to use escaped values.</t>
</list>
</t>
</section>

<section anchor="acknowledgements-1" title="Acknowledgements">
<t>Thanks to the following for feedback: Michael Douglass
</t>
<t>This specification originated from work at the Calendaring and
Scheduling Consortium <xref target="CALCONNECT"/>, which has helped with the
development and testing of implementations.
</t>
</section>

<section anchor="vpatch-examples-1" title="VPATCH Examples">
<t>Examples of single command patch documents for common iCalendar data
operations.
</t>

<section anchor="add-a-new-component-1" title="Add a new component">
<t>Creates a new &quot;VEVENT&quot; component.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
BEGIN:VEVENT
UID:1234
DTSTART:20160902T103000Z
DURATION:PT1H
SUMMARY:Test event
END:VEVENT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="add-a-new-valarm-component-1" title="Add a new VALARM component">
<t>Creates a new &quot;VALARM&quot; component in the &quot;VEVENT&quot; component with the
&quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VALARM
UID:4567
ACTION:DISPLAY
TRIGGER:-PT30M
DESCRIPTION:Time to leave
END:VALARM
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="replace-a-component-1" title="Replace a component">
<t>Replace the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;
with a new component.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VEVENT
UID:1234
DTSTART:20160903T123000Z
DURATION:PT2H
SUMMARY:Changed event
END:VEVENT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-component-1" title="Remove a component">
<t>Remove the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
PATCH-DELETE:/VEVENT[UID=1234]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="add-properties-to-a-component-1" title="Add properties to a component">
<t>Add &quot;STATUS&quot; and &quot;COMPLETED&quot; properties to the &quot;VTODO&quot; component with
the &quot;UID&quot; property value &quot;4321&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VTODO[UID=4321]
STATUS;PATCH-ACTION=CREATE:COMPLETED
COMPLETED;PATCH-ACTION=CREATE:20160902T224515Z
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="update-properties-in-a-component-1" title="Update properties in a component">
<t>Update the &quot;SUMMARY&quot; and &quot;LOCATION&quot; properties in the &quot;VEVENT&quot;
component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
SUMMARY:Title was changed
LOCATION:New place
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="update-a-targeted-property-in-a-component-1" title="Update a targeted property in a component">
<t>Update the &quot;ATTENDEE&quot; property with value &quot;mailto:cyrus@example.com&quot;
in the &quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
ATTENDEE;PATCH-ACTION=BYVALUE;PARTSTAT=ACCEPTED:
mailto:cyrus@example.com
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-property-from-a-component-1" title="Remove a property from a component">
<t>Remove the &quot;URL&quot; property from the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#URL
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-property-with-a-specific-value-from-a-component-1" title="Remove a property with a specific value from a component">
<t>Remove the &quot;ATTENDEE&quot; property with the value
&quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="change-a-parameter-on-a-property-with-a-specific-value-from-a-1" title="Change a parameter on a property with a specific value from a">
<t>component
</t>
<t>Change or add the &quot;PARTSTAT&quot; parameter on the &quot;ATTENDEE&quot; property
with the value &quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component
with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-PARAMETER;PARTSTAT=ACCEPTED:
#ATTENDEE[=mailto:cyrus@example.com]
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="remove-a-parameter-on-a-property-with-a-specific-value-from-a-component-1" title="Remove a parameter on a property with a specific value from a component">
<t>Remove the &quot;PARTSTAT&quot; parameter from the &quot;ATTENDEE&quot; property with the
value &quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the
&quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>
</section>

<section anchor="remove-a-value-from-a-multivalued-parameter-on-a-property-with-a-1" title="Remove a value from a multi-valued parameter on a property with a">
<t>specific value from a component
</t>
<t>Remove the &quot;mailto:calext@example.com&quot; value from the &quot;MEMBER&quot;
parameter on the &quot;ATTENDEE&quot; property with the value
&quot;mailto:cyrus@example.com&quot; in the &quot;VEVENT&quot; component with the &quot;UID&quot;
property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com]
;MEMBER=mailto:calext@example.com
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>

<section anchor="remove-a-value-from-a-multivalued-property-from-a-component-1" title="Remove a value from a multi-valued property from a component">
<t>Remove the value &quot;20160903T120000Z&quot; from the &quot;EXDATE&quot; property in the
&quot;VEVENT&quot; component with the &quot;UID&quot; property value &quot;1234&quot;.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[UID=1234]
PATCH-DELETE:#EXDATE=20160903T120000Z
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="attendee-updating-their-participation-status-1" title="Attendee updating their participation status">
<t>When an attendee updates their participation status in an event, they
will typically: update the &quot;PARTSTAT&quot; parameter on their &quot;ATTENDEE&quot;
property, remove the &quot;RSVP&quot; parameter on their &quot;ATTENDEE&quot; property,
update the &quot;TRANSP&quot; property in the &quot;VEVENT&quot; component.  This set of
changes is shown below in a single &quot;PATCH&quot; component, with the
attendee having the calendar user address &quot;mailto:cyrus@example.com&quot;.
The patch targets all &quot;VEVENT&quot; components in the iCalendar object
being changed.
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT
PATCH-DELETE:#ATTENDEE[=mailto:cyrus@example.com];RSVP
PATCH-PARAMETER;PARTSTAT=ACCEPTED:
#ATTENDEE[=mailto:cyrus@example.com]
TRANSP:OPAQUE
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="recurring-event-adding-one-override-1" title="Recurring event adding one override">
<t>A daily recurring &quot;VEVENT&quot; component with the &quot;SUMMARY&quot; property
being overridden for the second instance.
</t>
<t>iCalendar object before the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>Patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[RID=20160906]
SUMMARY:Test event - modified
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
<t>iCalendar object after the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID:20160906
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event - modified
END:VEVENT
END:VCALENDAR
</artwork></figure>
</section>

<section anchor="removal-of-an-overridden-instance-1" title="Removal of an overridden instance">
<t>A daily recurring &quot;VEVENT&quot; component has one existing instance
override removed with an &quot;EXDATE&quot; added for it.
</t>
<t>iCalendar object before the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID:20160906
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event - modified
END:VEVENT
END:VCALENDAR
</artwork></figure>
<t>Patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
UID:abcd
DTSTAMP:20160901T000000Z
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR
PATCH-DELETE:/VEVENT[RID=20160906]
END:PATCH
BEGIN:PATCH
PATCH-TARGET:/VCALENDAR/VEVENT[RID=M]
EXDATE;PATCH-ACTION=CREATE:20160906
END:PATCH
END:VPATCH
END:VCALENDAR
</artwork></figure>
<t>iCalendar object after the patch:
</t>

<figure align="left"><artwork align="left">
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20160905
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
EXDATE:20160906
END:VEVENT
END:VCALENDAR
</artwork></figure>
</section>
</section>

</back>
</rfc>
